/*! Grid */

//
// Grid Config vars
//
// Gap widths, '.container' sizes for diferent breakpoints and gridd colums
$grid-gap-width-base: 30px;
$grid-gap-widths: (
	xs: $grid-gap-width-base,
	sm: $grid-gap-width-base,
	md: $grid-gap-width-base,
	lg: $grid-gap-width-base,
	xl: $grid-gap-width-base
);

$container-max-widths: (
	sm: 540px,
	md: 720px,
	lg: 960px,
	xl: 1140px
);

$grid-columns: 12;

//
// Grid Mixins
//
// Center container and set lef and right padding.
@mixin set-container-spaces($gaps: $grid-gap-widths) {
	display: table; // Fix issue #3
	margin: 0 auto;
	@each $breakpoint in map-keys($gaps) {
		@include media-breakpoint($breakpoint) {
			$gap: map-get($gaps, $breakpoint);
			@include rem-px(padding-right, ($gap / 2));
			@include rem-px(padding-left, ($gap / 2));
		}
	}
}
//
// set container width at the diferent brakpoints.
@mixin set-container-max-widths($max-widths: $container-max-widths) {
	@each $breakpoint, $container-max-width in $max-widths {
		@include media-breakpoint($breakpoint) {
			width: $container-max-width;
			max-width: 100%;
		}
	}
}
//
// Set row left and right margins
@mixin set-row-spaces($gaps: $grid-gap-widths) {
	display: table-cell; // Fix issue #3
	@each $breakpoint in map-keys($gaps) {
		@include media-breakpoint($breakpoint) {
			$gap: map-get($gaps, $breakpoint);
			@include rem-px(margin-right, ($gap / -2));
			@include rem-px(margin-left, ($gap / -2));
		}
	}
}
//
// Set column left and right paddings.
@mixin set-column-gaps($gaps: $grid-gap-widths) {
	@each $breakpoint in map-keys($gaps) {
		@include media-breakpoint($breakpoint) {
			$gap: map-get($gaps, $breakpoint);
			@include rem-px(padding-right, ($gap / 2));
			@include rem-px(padding-left, ($gap / 2));
		}
	}
}
//
// Make the grid colums
@mixin make-grid-columns($columns: $grid-columns, $gaps: $grid-gap-widths, $breakpoints: $layout-breakpoints) {
	// Common properties for all breakpoints
	%grid-column-common {
		position: relative;
		width: 100%;
		min-height: 1px; // Prevent columns from collapsing when empty
		float: left;
		@include set-column-gaps($gaps);
	}
	@each $breakpoint, $value in $breakpoints {
		$infix: if($value != 0, "-" + $breakpoint, null);
		@for $i from 0 through $columns {
			.col#{$infix}-#{$i} {
				@extend %grid-column-common;
			}
		}
		.col#{$infix} {
			@extend %grid-column-common;
		}
		@include media-breakpoint($breakpoint) {
			@for $i from 1 through $columns {
				.col#{$infix}-#{$i} {
					max-width: percentage($i / $columns);
				}
			}
			// `$columns - 1` because offsetting by the width of an entire row isn't possible
			@for $i from 0 through ($columns - 1) {
				@if not ($infix == "" and $i == 0) { // Avoid emitting useless .offset-xs-0
					.offset-col#{$infix}-#{$i} {
						margin-left: percentage($i / $columns);
					}
				}
			}
		}
	}
}

//
// Set container spaces and width at the diferent breakpoints
.container {
	@include set-container-spaces;
	@include set-container-max-widths;
}
//
// The diference width the prev one is that this container doesn't have
// an specific size or sizes at breakpoints. Its width is 100%
.container-fluid {
	@include set-container-spaces;
}
//
// Row container
//
// Set spaces.
.row {
	@include set-row-spaces;
}
//
// Make the diferent type of columns
@include make-grid-columns();